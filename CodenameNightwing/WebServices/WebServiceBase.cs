//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó mediante una herramienta.
//     Los cambios del archivo se perderán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Net;
using System.IO;
using System.Net.Http;
using log4net;
using CodenameNightwing.Valtech.AuthService;
using CodenameNightwing.Valtech.AuditService;

namespace CodenameNightwing.WebServices
{
    public abstract class WebServiceBase
    {

        protected static readonly ILog logger = LogManager.GetLogger(typeof(WebServiceBase));

        protected string request;

        protected string response;

        protected string direccion;

        protected HttpStatusCode statusCode;


        protected abstract void writeQuery();

        protected abstract void setDireccion();

        protected void setup()
        {
            try
            {
                writeQuery();
                setDireccion();
            }
            catch (Exception e)
            {
                Program.logger.Error("Error al hacer setup de WS", e);
                this.direccion = null;
                this.request = null;
            }
        }

        private void sendRequest()
        {
            HttpWebResponse respuestaweb = null;
            WebRequest req = null;
            try
            {
                req = HttpWebRequest.Create(new Uri(direccion));
                req.Method = "POST";
                req.ContentType = "text/xml; charset=utf-8";
                // req.Headers.Add("SOAPAction", direccion);

                StreamWriter post = new StreamWriter(req.GetRequestStream(), Encoding.UTF8);

                post.Write(request);
                post.Flush();
                post.Close();

                respuestaweb = (HttpWebResponse) req.GetResponse();
                this.statusCode = respuestaweb.StatusCode;

                StreamReader leedor = new StreamReader(respuestaweb.GetResponseStream());

                this.response = leedor.ReadToEnd();

                respuestaweb.Close();
                leedor.Close();
            }
            catch (Exception e)
            {
                Program.logger.Error("WebServiceBase.sendRequest(): Error en comunicacion con Web Service", e);
                this.response = null;

            }
        }

        public string getResponse()
        {
            sendRequest();
            return this.response;
        }

        public string getStringResponse()
        {
            return this.response;
        }

        public string getRequest()
        {
            return request;
        }

        public HttpStatusCode getHttpStatusCode()
        {
            return statusCode;
        }
    }
}
