//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó mediante una herramienta.
//     Los cambios del archivo se perderán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------
using CodenameNightwing.Printer;
using CodenameNightwing.Varios;

namespace CodenameNightwing.BusinessLogic
{
    public class Tarjeta
    {
        public Tarjeta()
        {
            owner = new DuenioTarjeta();
            tipoTarjeta = TipoTarjeta.CREDITO;
        }

        public bool isMaestro() {

            return (( this.descripcion != null && this.descripcion.ToUpperInvariant().Contains("Maestro".ToUpperInvariant())) || (this.codSabre != null && (this.codSabre.Equals("MA") || this.codSabre.Equals("MO"))));

        }

        private object[] _providers;
        public object[] providers
        {
            get { return _providers; }
            set { _providers = value; }
        }

        private DuenioTarjeta _owner;
        public DuenioTarjeta owner
        {
            get { return _owner; }
            set { _owner = value; }
        }

        private TipoCuentaDebito _tipoCuentaDebito;
        public TipoCuentaDebito tipoCuentaDebito
        {
            get { return _tipoCuentaDebito; }
            set { _tipoCuentaDebito = value; }
        }

        /// <summary>
        /// debito, credito, ff, etc
        /// </summary>
        private TipoTarjeta _tipoTarjeta;
        public TipoTarjeta tipoTarjeta
        {
            get { return _tipoTarjeta; }
            set { _tipoTarjeta = value; }
        }

        /// <summary>
        /// Numero completo de la tarjeta
        /// </summary>
        private string _numero = null;
        public string numero
        {
            get { return _numero; }
            set { _numero = value; }
        }


        private string _originalNumber = null;
        public string originalNumber
        {
            get { return _originalNumber; }
            set { _originalNumber = value; }
        }
        private string _vencimiento;
        public string vencimiento
        {
            get { return _vencimiento; }
            set { _vencimiento = value; }
        }

        private string _codTarjeta;
        public string codTarjeta
        {
            get { return _codTarjeta; }
            set { _codTarjeta = value; }
        }

        private string _cvc;
        public string cvc
        {
            get { return _cvc; }
            set { _cvc = value; }
        }


        private string _idTarjeta;
        public string idTarjeta
        {
            get { return _idTarjeta; }
            set { _idTarjeta = value; }
        }

        private string _banco;
        public string banco
        {
            get { return _banco; }
            set { _banco = value; }
        }

        private string _codSabre;
        public string codSabre
        {
            get { return _codSabre; }
            set { _codSabre = value; }
        }

        private string _descripcion;
        public string descripcion
        {
            get { return _descripcion; }
            set { _descripcion = value; }
        }


        private string _debitoSeleccionada;
        public string debitoSeleccionada
        {
            get { return _debitoSeleccionada; }
            set { _debitoSeleccionada = value; }
        }

        private string _codPlan;
        public string codPlan
        {
            get { return _codPlan; }
            set { _codPlan = value; }
        }

        public bool faltanDatosTarjeta()
        {
            return (this.numero == null || this.vencimiento == null || this.cvc == null) ;
        }


        public string getVencimientoPrimeroAnios()
        {
            return vencimiento.Substring(2) + vencimiento.Substring(0, 2);
        }

        public string getVencimientoSabre()
        {
            if (vencimiento != null)
                return vencimiento.Substring(0, 2) + "/" + vencimiento.Substring(2);
            else
                return null;
        }

        public string primeros6()
        {
            if ( numero != null && numero.Length > 0)
                return numero.Substring(0, 6);
            else
                return "";
        }

        public string ultimos4()
        {
            if (numero != null && numero.Length > 0)
                return numero.Substring(numero.Length - 4, 4);
            else
                return "";
        }

        public bool isFirstDataDebit() {

            if ( this.descripcion != null && (this.descripcion.ToUpper().Equals("MAESTRO") || this.descripcion.ToUpper().Equals("MC DEBIT")))
            {
                return true;
            }else
            {
                return false;
            }
        }

       
    }
}
